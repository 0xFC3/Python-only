# -*- coding: utf-8 -*-
"""Aufgabe 3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bk8YkwZbk98gY1kwExWlOGjEgwAXfu6Q

Aufgabe 3

Das gleiche Program kann für alle Beispiele ausgeführt werden. Es muss nur der Name der Text Datei geändert werden sodass ein anderes Beispiel ausgeführt werden kann.

1. Einlesen des Textdokuments in eine große Liste

2. 10 zufällige Zahlen für Al generieren

3. Die Bilanz berechnen: d.h. einnahmen - ausgaben (Diese Berechnung ist in eine Funktion verpackt, sodass man sie später ein weiteres Mal benutzen kann.)

4.Optimierung der Zahlen des Al: Ich sortiere die Zahlen der Mitspieler und Teile sie in 10 Abschnitte ein. Von diesen Abschnitten wird jeweils ein Durchnischtswert berchnet und gerundet und dann zu einer der Zahlen des Al gemacht.
"""

file = open("3.1.txt")
reader = file.readlines()
zahlen = []
for line in reader:
  zahlen.append(line.split())
for i in range(0,len(zahlen)):
  zahlen[i] = int(zahlen[i][0])
print(zahlen)

#10 random zahlen generieren
import random
zahlen_des_al = random.sample(range(1,1001), 10)
print(zahlen_des_al)

#geld billanz berechnen
def billanz_berechnen(zahlen, zahlen_des_al):
  einnahmen = 25* len(zahlen)
  gewinne_der_teilnehmer = []
  for d in range(0,len(zahlen)):
    gewinne_der_teilnehmer.append(1000)
    for i in range(0,9):
      if zahlen[d] < zahlen_des_al[i]:
        cost = zahlen_des_al[i] - zahlen[d]
      else:
        cost = zahlen[d] - zahlen_des_al[i]
      if cost < gewinne_der_teilnehmer[d]:
        gewinne_der_teilnehmer[d] = cost

  ausgaben= 0
  for i in range(0,len(gewinne_der_teilnehmer)):
    ausgaben += gewinne_der_teilnehmer[i]
  billanz = einnahmen - ausgaben
  return billanz
billanz = billanz_berechnen(zahlen, zahlen_des_al)
print(billanz, '$')

#optimierung der billanz: die zahlen in 10 Abschnitte eintielen und dann von diesen Abschnitten den Durchschnitt berechnen
zahlen = sorted(zahlen)
abschnitt_laenge = round(len(zahlen) / 10)
zahlen_abschnitte = []
zusatz = []
for i in range(0, 10):
  zusatz.append(i*abschnitt_laenge)
c = 0
for element in zusatz: 
  zahlen_abschnitte.append([])
  a = element
  if abschnitt_laenge+1 + element > len(zahlen):
    b = len(zahlen)
  else:
    b = abschnitt_laenge + element
  for i in range(a, b):
    zahlen_abschnitte[c].append(zahlen[i])
  c +=1
  
print(zahlen_abschnitte)

c = 0
for element in zahlen_abschnitte:
  summe = 0
  for i in range(0,len(element)):
    summe += element[i]
    
  zahlen_des_al[c] = round(summe / len(element))
  c += 1
print(zahlen_des_al)

billanz = billanz_berechnen(zahlen, zahlen_des_al)
print(billanz)

"""Letzendlich ist die Bilanz zwar schon viel besser, aber immer noch negativ. D.h. das sein Glücksspiel einen zu geringen Einsatz hat."""